= simple_form_for(@custom_blacklist) do |f|
  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

  .form-inputs
    = f.input :category_id, collection: Category.all
    = f.input :blacklist_type, collection: CustomBlacklist.blacklist_types.keys, label: "Blacklist Type", disabled: true
    = f.input :domain, placeholder: "Domain Name / IP Address", label: "Domain Name / IP Address", disabled: true
    div[data-controller="showhide" data-showhide-show-if-value="CNAME" ]
      = f.input :action, as: :select, collection: [['CNAME rpz-drop', 'CNAME rpz-drop.'], ['CNAME .', 'CNAME .'], ['CNAME rpz-passthru', 'CNAME rpz-passthru.'], ['CNAME *.', 'CNAME *.'], ['CNAME rpz-tcp-only', 'CNAME rpz-tcp-only.'], ['CNAME', 'CNAME']], class: 'form-select', input_html: {data: { showhide_target: "input", action: "change->showhide#toggle" }},label: false,include_blank: 'Select Action'
      = f.input :destination, input_html: { data: { showhide_target: "output",action: "change->showhide#toggle"  } }, placeholder: "Destination", label: false
    / = f.hidden_field :kind, value: kind
    // hidden field for zone_id
    = f.hidden_field :zone_id, value: params[:zone_id]    

  .form-actions
    = f.button :submit, class: "btn btn-new btn-sm"